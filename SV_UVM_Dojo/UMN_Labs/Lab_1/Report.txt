1. Write a constraint such that the random variable 'a' in the adder gets randomized to a value in the range [0-7] with twice the probablity compared to values [8-15].

rand bit [3:0] a;
constraint c_a {
  if(a < 8) {
    a inside {[0:7], [0:7]};
  } else {
    a inside {[8:15]};
  }
}

2. Write an inline constraint such that the random variable 'b' in adder testbench gets randomized in the range of values [0-7]

module adder_testbench;
  // Declare input/output ports
  logic [3:0] a, b, result;
  
  // Inline constraint for 'b' to be randomized in the range of values [0-7]
  initial begin
    b = randomize() with { b inside {[0:7]}; };
  end
  
  // Instantiate adder and other components here
  // ...
  
endmodule

3. What is the difference between rand and randc?




4. What is a virtual interface? How is it useful?



5. What is an abstract class? How is it useful?
